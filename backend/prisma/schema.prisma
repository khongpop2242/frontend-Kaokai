// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  address   String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@map("users")
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  model        String
  price        Decimal  @db.Decimal(10, 2)
  originalPrice Decimal @db.Decimal(10, 2)
  image        String
  category     String
  description  String   @db.Text
  stock        Int      @default(0)
  rating       Decimal  @db.Decimal(3, 2) @default(0)
  reviews      Int      @default(0)
  isBestSeller Boolean  @default(false)
  isOnSale     Boolean  @default(false)
  discount     Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  cartItems CartItem[]
  orderItems OrderItem[]

  @@map("products")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("cart_items")
}

model Order {
  id              String      @id @default(cuid())
  userId          Int
  total           Decimal     @db.Decimal(10, 2)
  status          OrderStatus @default(PENDING)
  shippingAddress String      @db.Text
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   String
  productId Int
  name      String
  price     Decimal  @db.Decimal(10, 2)
  quantity  Int
  createdAt DateTime @default(now())

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model Promotion {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  discount    Int
  validUntil  DateTime
  image       String
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("promotions")
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  message   String   @db.Text
  createdAt DateTime @default(now())

  @@map("contacts")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
