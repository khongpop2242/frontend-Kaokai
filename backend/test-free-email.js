import 'dotenv/config';
import { createTransport } from 'nodemailer';

const EMAIL_USER = process.env.EMAIL_USER; // Email ‡∏ü‡∏£‡∏µ
const EMAIL_PASS = process.env.EMAIL_PASS; // App Password
const USE_GMAIL_SERVICE = process.env.USE_GMAIL_SERVICE;
const SMTP_HOST = process.env.SMTP_HOST;
const SMTP_PORT = process.env.SMTP_PORT;
const SMTP_SECURE = process.env.SMTP_SECURE;

console.log('üÜì ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Email ‡∏ü‡∏£‡∏µ');
console.log('Email ‡∏ü‡∏£‡∏µ:', EMAIL_USER);
console.log('App Password:', EMAIL_PASS ? '***‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß***' : '‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤');
console.log('‡πÉ‡∏ä‡πâ Gmail Service:', USE_GMAIL_SERVICE !== 'false' ? '‡πÉ‡∏ä‡πà' : '‡πÑ‡∏°‡πà');
if (USE_GMAIL_SERVICE === 'false') {
  console.log('SMTP Host:', SMTP_HOST);
  console.log('SMTP Port:', SMTP_PORT);
  console.log('SMTP Secure:', SMTP_SECURE);
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
if (!EMAIL_USER || !EMAIL_PASS || 
    EMAIL_USER.includes('your-') || 
    EMAIL_PASS.includes('your-')) {
  console.log('\n‚ùå ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Email ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ placeholder');
  console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
  console.log('   1. ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå backend/.env');
  console.log('   2. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô EMAIL_USER ‡πÄ‡∏õ‡πá‡∏ô email ‡∏ü‡∏£‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì');
  console.log('   3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô EMAIL_PASS ‡πÄ‡∏õ‡πá‡∏ô App Password ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì');
  console.log('   4. ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô FREE_EMAIL_SETUP.md');
  process.exit(1);
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á transporter
const createEmailTransporter = () => {
  if (!EMAIL_USER || !EMAIL_PASS) {
    console.error('EMAIL_USER or EMAIL_PASS is not set in environment variables.');
    return null;
  }

  // Default to Gmail service if USE_GMAIL_SERVICE is true or not explicitly false
  if (USE_GMAIL_SERVICE === 'true' || USE_GMAIL_SERVICE === undefined) {
    return createTransport({
      service: 'gmail',
      auth: {
        user: EMAIL_USER,
        pass: EMAIL_PASS,
      },
    });
  } else {
    // Use custom SMTP settings
    const host = SMTP_HOST || 'smtp.example.com';
    const port = parseInt(SMTP_PORT || '587', 10);
    const secure = SMTP_SECURE === 'true';

    return createTransport({
      host: host,
      port: port,
      secure: secure,
      auth: {
        user: EMAIL_USER,
        pass: EMAIL_PASS,
      },
    });
  }
};

const transporter = createEmailTransporter();

async function testFreeEmail() {
  const customerEmail = 'customer@gmail.com'; // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
  const customerName = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤';
  const resetUrl = 'http://localhost:3000/reset-password?token=abc123';
  
  try {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...');
    await transporter.verify();
    console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Email ‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á email ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤...');
    const mailOptions = {
      from: `"Furniture KaoKai" <${EMAIL_USER}>`, // ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å email ‡∏ü‡∏£‡∏µ
      to: customerEmail, // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      subject: '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì - Furniture KaoKai',
      html: `
        <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; border-radius: 8px; overflow: hidden;">
          <div style="background-color: #dc3545; color: white; padding: 20px; text-align: center;">
            <h1 style="margin: 0;">‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</h1>
          </div>
          <div style="padding: 20px;">
            <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${customerName},</p>
            <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</p>
            <p style="text-align: center; margin: 30px 0;">
              <a href="${resetUrl}" style="background-color: #dc3545; color: white; padding: 12px 25px; text-decoration: none; border-radius: 5px; font-size: 16px;">
                ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
              </a>
            </p>
            <p>‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</p>
            <p>‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ô‡∏µ‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏∞‡πÄ‡∏ß‡πâ‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ</p>
            <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì,<br>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô Furniture KaoKai</p>
          </div>
        </div>
      `,
    };
    
    await transporter.sendMail(mailOptions);
    console.log('‚úÖ ‡∏™‡πà‡∏á email ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log(`üìß ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö email ‡∏ó‡∏µ‡πà ${customerEmail}`);
    console.log(`üìß ‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å: ${EMAIL_USER}`);
    console.log('üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!');
    console.log('üí∞ ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ü‡∏£‡∏µ 100%');
    
  } catch (error) {
    console.log('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    
    if (error.message.includes('Invalid login') || error.message.includes('BadCredentials')) {
      console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
      console.log('   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö EMAIL_USER ‡πÅ‡∏•‡∏∞ EMAIL_PASS');
      console.log('   2. ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Gmail: ‡πÉ‡∏ä‡πâ App Password ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥');
      console.log('   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ 2-Factor Authentication ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà');
      console.log('   4. App Password ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 16 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
    } else if (error.message.includes('Connection timeout')) {
      console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
      console.log('   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï');
      console.log('   2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firewall settings');
      console.log('   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SMTP settings');
    }
  }
}

testFreeEmail();
