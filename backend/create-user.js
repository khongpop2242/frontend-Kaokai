import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function createUser() {
  try {
    console.log('üë§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á User ‡∏õ‡∏Å‡∏ï‡∏¥...');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ user ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingUser = await prisma.user.findFirst({
      where: { email: 'user@furniture.com' }
    });

    if (existingUser) {
      console.log('‚úÖ ‡∏û‡∏ö User ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß:', existingUser.email);
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡∏õ‡∏Å‡∏ï‡∏¥
    const hashedPassword = await bcrypt.hash('user123', 10);
    
    const user = await prisma.user.create({
      data: {
        name: 'User Test',
        email: 'user@furniture.com',
        password: hashedPassword,
        phone: '089-876-5432',
        address: '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        role: 'USER'
      }
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á User ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log('üìß Email:', user.email);
    console.log('üîë Password: user123');
    console.log('üë§ Role:', user.role);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createUser();
