import 'dotenv/config';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testFavorites() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Favorites');
  
  try {
    // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Favorite
    console.log('\n1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Favorite...');
    const testUser = await prisma.user.findFirst();
    const testProduct = await prisma.product.findFirst();
    
    if (!testUser || !testProduct) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
      return;
    }
    
    console.log(`üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${testUser.name} (ID: ${testUser.id})`);
    console.log(`üì¶ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${testProduct.name} (ID: ${testProduct.id})`);
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° Favorite
    console.log('\n2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° Favorite...');
    const favorite = await prisma.favorite.create({
      data: {
        userId: testUser.id,
        productId: testProduct.id
      },
      include: {
        user: {
          select: { name: true, email: true }
        },
        product: {
          select: { name: true, price: true }
        }
      }
    });
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Favorite ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:');
    console.log(`   - ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${favorite.user.name}`);
    console.log(`   - ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${favorite.product.name}`);
    console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤: ${favorite.product.price} ‡∏ö‡∏≤‡∏ó`);
    console.log(`   - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${favorite.createdAt}`);
    
    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á Favorites ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    console.log('\n3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á Favorites ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...');
    const userFavorites = await prisma.favorite.findMany({
      where: { userId: testUser.id },
      include: {
        product: {
          select: {
            id: true,
            name: true,
            price: true,
            image: true,
            category: true
          }
        }
      },
      orderBy: { createdAt: 'desc' }
    });
    
    console.log(`‚úÖ ‡∏û‡∏ö Favorites ${userFavorites.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:`);
    userFavorites.forEach((fav, index) => {
      console.log(`   ${index + 1}. ${fav.product.name} - ${fav.product.price} ‡∏ö‡∏≤‡∏ó`);
    });
    
    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Favorite
    console.log('\n4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Favorite...');
    const isFavorite = await prisma.favorite.findUnique({
      where: {
        userId_productId: {
          userId: testUser.id,
          productId: testProduct.id
        }
      }
    });
    
    console.log(`‚úÖ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${testProduct.name} ${isFavorite ? '‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô' : '‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô'} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î`);
    
    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö Favorite
    console.log('\n5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö Favorite...');
    await prisma.favorite.delete({
      where: {
        userId_productId: {
          userId: testUser.id,
          productId: testProduct.id
        }
      }
    });
    
    console.log('‚úÖ ‡∏•‡∏ö Favorite ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    
    // 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Favorite ‡∏´‡∏•‡∏±‡∏á‡∏•‡∏ö
    console.log('\n6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Favorite ‡∏´‡∏•‡∏±‡∏á‡∏•‡∏ö...');
    const isFavoriteAfterDelete = await prisma.favorite.findUnique({
      where: {
        userId_productId: {
          userId: testUser.id,
          productId: testProduct.id
        }
      }
    });
    
    console.log(`‚úÖ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${testProduct.name} ${isFavoriteAfterDelete ? '‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô' : '‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô'} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î`);
    
    console.log('\nüéâ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Favorites ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testFavorites();
